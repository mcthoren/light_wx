#!/usr/bin/python3     

import time, datetime, busio, board, sys
import adafruit_veml6070
import adafruit_tsl2561

sys.path.append('/home/ghz/wxlib')
import wxlib as wx

wx_dir = "/home/ghz/light_wx"
     
i2c = busio.I2C(board.SCL, board.SDA)

uv = adafruit_veml6070.VEML6070(i2c, 'VEML6070_4_T')
vis_ir = adafruit_tsl2561.TSL2561(i2c)

# init the tsl sensor
vis_ir.enabled = True
time.sleep(1)
vis_ir.gain = 0
vis_ir.integration_time = 1

# first reads are often kinda bogus
try:
	lux = vis_ir.lux
	uvr = uv.uv_raw
	bb = vis_ir.broadband
	ir = vis_ir.infrared
except:
	printf("inital read failed.")

t_vals = {}
vals = {}
counts = {}
for i in range(0,4):
	t_vals[i] = vals[i] = counts[i] = 0

time0 = time1 = time.time()

while True:
	ts = datetime.datetime.fromtimestamp(time.time()).strftime("%Y%m%d%H%M%S")

	t_vals[0] = vis_ir.lux
	t_vals[1] = uv.uv_raw
	t_vals[2] = vis_ir.broadband
	t_vals[3] = vis_ir.infrared

	for i in range(0,4):
		if isinstance(t_vals[i], (float, int)):
			vals[i] += t_vals[i]
			counts[i] += 1

	lux = "%.2f" % (vals[0] / counts[0])
	uvr = "%d" % (vals[1] / counts[1])
	bb = "%d" % (vals[2] / counts[2])
	ir = "%d" % (vals[3] / counts[3])

	time1 = time.time()
	if((time1 - time0) > 60):
		dat = "%s\tlux: %s\tUV: %s\tBB: %s\tIR: %s\n" % (ts, lux, uvr, bb, ir)
		wx.write_out_dat_stamp(ts, 'light_levels', dat, wx_dir)
		time0 = time1 = time.time()
		for i in range(0,4):
			t_vals[i] = vals[i] = counts[i] = 0

	time.sleep(1)
